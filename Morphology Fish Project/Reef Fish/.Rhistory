filter(species == "UN")
hawksbill_turtles <- turtles_map %>%
filter(species == "Hawksbill")
leatherback_turtles<- turtles_map %>%
filter(species == "Leatherback")
ui <- dashboardPage(skin="green",
dashboardHeader(title = "Turtle Capture Locations"),
dashboardSidebar(disable = T),
dashboardBody(
fluidPage(
titlePanel("Turtle Capture Locations"),
leafletOutput(outputId = "mymap"),
absolutePanel(bottom = 25, left = 20,
checkboxInput("green_point", "Green", FALSE),
checkboxInput("leatherback_point", "Leatherback", FALSE),
checkboxInput("loggerhead_point", "Loggerhead", FALSE),
checkboxInput("kemps_ridley_point", "Kemps Ridley", FALSE),
checkboxInput("unknown_point", "Unknown", FALSE),
checkboxInput("hawksbill_point", "Hawksbill", FALSE)
)
)
)
)
server <- function(input, output, session) {
factpal <- colorFactor(topo.colors(6), turtles3$species)
output$mymap <- renderLeaflet({
basemap= leaflet()  %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE))
basemap %>%
addCircles(data = green_turtles, lat = ~ green_turtles$cap_latitude, lng = ~ green_turtles$cap_longitude, weight = 1, color = "green", radius = 2, fillOpacity = 0.5, group = "Green") %>%
addCircles(data = leatherback_turtles, lat = ~ leatherback_turtles$cap_latitude, lng = ~ leatherback_turtles$cap_longitude, weight = 1, radius = 2, fillOpacity = 0.5,  group = "Leatherback") %>%
addCircles(data = loggerhead_turtles, lat = ~ loggerhead_turtles$cap_latitude, lng = ~ loggerhead_turtles$cap_longitude, weight = 1, radius = 2, fillOpacity = 0.5,  group = "Loggerhead") %>%
addCircles(data = kemps_ridley_turtles, lat = ~ kemps_ridley_turtles$cap_latitude, lng = ~ kemps_ridley_turtles$cap_longitude, weight = 1, radius = 2, fillOpacity = 0.5, group = "Kemps Ridley") %>%
addCircles(data = unknown_turtles, lat = ~ unknown_turtles$cap_latitude, lng = ~ unknown_turtles$cap_longitude, weight = 1, radius = 2, fillOpacity = 0.5, group = "Unknown") %>%
addCircles(data = hawksbill_turtles, lat = ~ hawksbill_turtles$cap_latitude, lng = ~ hawksbill_turtles$cap_longitude, weight = 1, radius = 2, fillOpacity = 0.5, group = "Hawksbill")
})
observe({
proxy <- leafletProxy("mymap", data = green_turtles)
proxy %>% clearMarkers()
if (input$green_point) {
proxy %>%  addCircles(data = green_turtles, lat = ~ green_turtles$cap_latitude, lng = ~ green_turtles$cap_longitude, weight = 1, radius = 3, fillOpacity = 0.5, group = "Green", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = loggerhead_turtles)
proxy %>% clearMarkers()
if (input$loggerhead_point) {
proxy %>%  addCircles(data = loggerhead_turtles, lat = ~ loggerhead_turtles$cap_latitude, lng = ~ loggerhead_turtles$cap_longitude, weight = 1, radius = 3, fillOpacity = 0.5, group = "Loggerhead", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = kemps_ridley_turtles)
proxy %>% clearMarkers()
if (input$kemps_ridley_point) {
proxy %>%  addCircles(data = kemps_ridley_turtles, lat = ~ kemps_ridley_turtles$cap_latitude, lng = ~ kemps_ridley_turtles$cap_longitude, weight = 1, radius = 3, fillOpacity = 0.5, group = "Kemps Ridley", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = unknown_turtles)
proxy %>% clearMarkers()
if (input$unknown_point) {
proxy %>%  addCircles(data = unknown_turtles, lat = ~ unknown_turtles$cap_latitude, lng = ~ unknown_turtles$cap_longitude, weight = 1, radius = 3, fillOpacity = 0.5, group = "Unknown", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = hawksbill_turtles)
proxy %>% clearMarkers()
if (input$hawksbill_point) {
proxy %>%  addCircles(data = hawksbill_turtles, lat = ~ hawksbill_turtles$cap_latitude, lng = ~ hawksbill_turtles$cap_longitude, weight = 1, radius = 3, fillOpacity = 0.5, group = "Hawksbill", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = leatherback_turtles)
proxy %>% clearMarkers()
if (input$leatherback_point) {
proxy %>%  addCircles(data = leatherback_turtles, lat = ~ leatherback_turtles$cap_latitude, lng = ~ leatherback_turtles$cap_longitude, weight = 1, radius = 3, fillOpacity = 0.5, group = "Leatherback", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
turtles3%>%
ggplot(aes(x=year,fill=year))+
geom_bar(position = "dodge")+
labs(title="Total Turtle Captures Across the Years",x="Year",y="Turtle Captures")+
theme_light(base_size = 12)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
turtles3%>%
ggplot(aes(month(x=date_capture_new,label=TRUE), fill=month(x=date_capture_new,label=TRUE)))+
geom_bar(position = "dodge")+
labs(title="Turtle Captures by Month",x = NULL,
y = "Number of Captures",fill="Month")+
scale_fill_brewer(palette="Set3")+
theme_light(base_size = 12)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
turtles3%>%
ggplot(aes(month(x=date_capture_new,label=TRUE),fill=month(x=date_capture_new,label=TRUE)))+
geom_bar()+
labs(title="Turtle Captures by Month",x = NULL,
y = "Number of Captures",fill="Month")+
scale_fill_brewer(palette="Set3")+
theme_light(base_size = 12)+
theme(axis.text.x = element_text(angle = 60, hjust = 1,size=6))+
facet_wrap(~year)
turtles3$year<-as.factor(turtles3$year)
turtles3%>%
group_by(species,year)%>%
summarise(Total=n())%>%
ggplot(aes(x=year,y=Total,group=species,color=species))+
geom_line()+
geom_point(shape=2)+
scale_fill_brewer(palette = "Set3")+
theme_light(base_size = 12)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "Turtle Captures By Species Across the Years",x="Year",y="Turtle Captures")
turtles3%>%
ggplot(aes(x=day(date_capture_new)))+
geom_density(color="black",fill="green",alpha=.5)+
labs(title="Turtle Captures Within a Given Month",x = "Day of the Month",
y = "Number of Captures")+
theme_light(base_size = 12)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
turtles3%>%
ggplot(aes(wday(x=date_capture_new,label=TRUE),fill=wday(x=date_capture_new,label=TRUE)))+
geom_bar()+
labs(title="Turtle Captures Across the Week Days",x = NULL,
y = "Number of Captures",fill="Week Day")+
scale_fill_brewer(palette = "Set3")+
theme_light(base_size = 12)+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ui <- dashboardPage(skin="green",
dashboardHeader(title = "Turtle Capture Locations"),
dashboardSidebar(disable = T),
dashboardBody(
fluidPage(
titlePanel("Turtle Capture Locations"),
leafletOutput(outputId = "mymap"),
absolutePanel(bottom = 25, left = 20,
checkboxInput("green_point", "Green", FALSE),
checkboxInput("leatherback_point", "Leatherback", FALSE),
checkboxInput("loggerhead_point", "Loggerhead", FALSE),
checkboxInput("kemps_ridley_point", "Kemps Ridley", FALSE),
checkboxInput("unknown_point", "Unknown", FALSE),
checkboxInput("hawksbill_point", "Hawksbill", FALSE)
)
)
)
)
server <- function(input, output, session) {
factpal <- colorFactor(topo.colors(6), turtles3$species)
output$mymap <- renderLeaflet({
basemap= leaflet()  %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE))
basemap %>%
addCircles(data = green_turtles, lat = ~ green_turtles$cap_latitude, lng = ~ green_turtles$cap_longitude, weight = 1, color = "green", radius = 2, fillOpacity = 0.5, group = "Green") %>%
addCircles(data = leatherback_turtles, lat = ~ leatherback_turtles$cap_latitude, lng = ~ leatherback_turtles$cap_longitude, weight = 1, radius = 2, fillOpacity = 0.5,  group = "Leatherback") %>%
addCircles(data = loggerhead_turtles, lat = ~ loggerhead_turtles$cap_latitude, lng = ~ loggerhead_turtles$cap_longitude, weight = 1, radius = 2, fillOpacity = 0.5,  group = "Loggerhead") %>%
addCircles(data = kemps_ridley_turtles, lat = ~ kemps_ridley_turtles$cap_latitude, lng = ~ kemps_ridley_turtles$cap_longitude, weight = 1, radius = 2, fillOpacity = 0.5, group = "Kemps Ridley") %>%
addCircles(data = unknown_turtles, lat = ~ unknown_turtles$cap_latitude, lng = ~ unknown_turtles$cap_longitude, weight = 1, radius = 2, fillOpacity = 0.5, group = "Unknown") %>%
addCircles(data = hawksbill_turtles, lat = ~ hawksbill_turtles$cap_latitude, lng = ~ hawksbill_turtles$cap_longitude, weight = 1, radius = 2, fillOpacity = 0.5, group = "Hawksbill")
})
observe({
proxy <- leafletProxy("mymap", data = green_turtles)
proxy %>% clearMarkers()
if (input$green_point) {
proxy %>%  addCircles(data = green_turtles, lat = ~ green_turtles$cap_latitude, lng = ~ green_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Green", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = loggerhead_turtles)
proxy %>% clearMarkers()
if (input$loggerhead_point) {
proxy %>%  addCircles(data = loggerhead_turtles, lat = ~ loggerhead_turtles$cap_latitude, lng = ~ loggerhead_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Loggerhead", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = kemps_ridley_turtles)
proxy %>% clearMarkers()
if (input$kemps_ridley_point) {
proxy %>%  addCircles(data = kemps_ridley_turtles, lat = ~ kemps_ridley_turtles$cap_latitude, lng = ~ kemps_ridley_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Kemps Ridley", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = unknown_turtles)
proxy %>% clearMarkers()
if (input$unknown_point) {
proxy %>%  addCircles(data = unknown_turtles, lat = ~ unknown_turtles$cap_latitude, lng = ~ unknown_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Unknown", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = hawksbill_turtles)
proxy %>% clearMarkers()
if (input$hawksbill_point) {
proxy %>%  addCircles(data = hawksbill_turtles, lat = ~ hawksbill_turtles$cap_latitude, lng = ~ hawksbill_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Hawksbill", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = leatherback_turtles)
proxy %>% clearMarkers()
if (input$leatherback_point) {
proxy %>%  addCircles(data = leatherback_turtles, lat = ~ leatherback_turtles$cap_latitude, lng = ~ leatherback_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Leatherback", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(skin="green",
dashboardHeader(title = "Turtle Capture Locations"),
dashboardSidebar(disable = T),
dashboardBody(
fluidPage(
titlePanel("Turtle Capture Locations"),
leafletOutput(outputId = "mymap"),
absolutePanel(bottom = 25, left = 20,
checkboxInput("green_point", "Green", FALSE),
checkboxInput("leatherback_point", "Leatherback", FALSE),
checkboxInput("loggerhead_point", "Loggerhead", FALSE),
checkboxInput("kemps_ridley_point", "Kemps Ridley", FALSE),
checkboxInput("unknown_point", "Unknown", FALSE),
checkboxInput("hawksbill_point", "Hawksbill", FALSE)
)
)
)
)
server <- function(input, output, session) {
factpal <- colorFactor(topo.colors(6), turtles3$species)
output$mymap <- renderLeaflet({
basemap= leaflet()  %>%
addProviderTiles(providers$Stamen.TonerLite,
options = providerTileOptions(noWrap = TRUE))
basemap %>%
addCircles(data = green_turtles, lat = ~ green_turtles$cap_latitude, lng = ~ green_turtles$cap_longitude, weight = 1, color = "green", radius = 5, fillOpacity = 0.5, group = "Green") %>%
addCircles(data = leatherback_turtles, lat = ~ leatherback_turtles$cap_latitude, lng = ~ leatherback_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5,  group = "Leatherback") %>%
addCircles(data = loggerhead_turtles, lat = ~ loggerhead_turtles$cap_latitude, lng = ~ loggerhead_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5,  group = "Loggerhead") %>%
addCircles(data = kemps_ridley_turtles, lat = ~ kemps_ridley_turtles$cap_latitude, lng = ~ kemps_ridley_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Kemps Ridley") %>%
addCircles(data = unknown_turtles, lat = ~ unknown_turtles$cap_latitude, lng = ~ unknown_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Unknown") %>%
addCircles(data = hawksbill_turtles, lat = ~ hawksbill_turtles$cap_latitude, lng = ~ hawksbill_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Hawksbill")
})
observe({
proxy <- leafletProxy("mymap", data = green_turtles)
proxy %>% clearMarkers()
if (input$green_point) {
proxy %>%  addCircles(data = green_turtles, lat = ~ green_turtles$cap_latitude, lng = ~ green_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Green", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = loggerhead_turtles)
proxy %>% clearMarkers()
if (input$loggerhead_point) {
proxy %>%  addCircles(data = loggerhead_turtles, lat = ~ loggerhead_turtles$cap_latitude, lng = ~ loggerhead_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Loggerhead", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = kemps_ridley_turtles)
proxy %>% clearMarkers()
if (input$kemps_ridley_point) {
proxy %>%  addCircles(data = kemps_ridley_turtles, lat = ~ kemps_ridley_turtles$cap_latitude, lng = ~ kemps_ridley_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Kemps Ridley", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = unknown_turtles)
proxy %>% clearMarkers()
if (input$unknown_point) {
proxy %>%  addCircles(data = unknown_turtles, lat = ~ unknown_turtles$cap_latitude, lng = ~ unknown_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Unknown", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = hawksbill_turtles)
proxy %>% clearMarkers()
if (input$hawksbill_point) {
proxy %>%  addCircles(data = hawksbill_turtles, lat = ~ hawksbill_turtles$cap_latitude, lng = ~ hawksbill_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Hawksbill", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
observe({
proxy <- leafletProxy("mymap", data = leatherback_turtles)
proxy %>% clearMarkers()
if (input$leatherback_point) {
proxy %>%  addCircles(data = leatherback_turtles, lat = ~ leatherback_turtles$cap_latitude, lng = ~ leatherback_turtles$cap_longitude, weight = 1, radius = 5, fillOpacity = 0.5, group = "Leatherback", color = ~factpal(species))
}
else{
proxy %>% clearShapes()
}
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
install.packages(c("BiocManager", "bslib", "colorspace", "dplyr", "ellipsis", "httpuv", "later", "leaflet.minicharts", "lubridate", "maptools", "nycflights13", "openssl", "pillar", "pkgload", "processx", "qtl", "raster", "RCurl", "remotes", "reprex", "rlang", "rmarkdown", "rvest", "sass", "sf", "skimr", "stringi", "systemfonts", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "units", "utf8", "vctrs", "viridis", "viridisLite", "waldo", "withr", "xfun"))
library(StereoMorph)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/ericc/Desktop/General-Repository/Reef Fish")
knitr::opts_chunk$set(echo = TRUE)
t<-reef_fish%>%
group_by(Family,Prey)%>%
summarise(mean_body_length=mean(Body_length),
mean_body_depth=mean(Body_depth),
mean_fineness=mean(Fineness_ratio),
mean_cd_depth=mean(Caudal_peduncle_depth),
mean_jaw_distance=mean(Jaws_to_eye_distance))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(StereoMorph)
library(ggplot2)
library(here)
library(ggthemes)
library(paletteer)
library(ggstatsplot)
reef_fish <- readr::read_csv("my_data/105_coral_reef_dataset.csv")
glimpse(reef_fish)
reef_fish%>%
group_by(Prey)%>%
summarise(mean_body_length=mean(Body_length),
mean_body_depth=mean(Body_depth),
mean_fineness=mean(Fineness_ratio),
mean_cd_depth=mean(Caudal_peduncle_depth),
mean_jaw_distance=mean(Jaws_to_eye_distance))
#install.packages("ggExtra")
#install.packages("ColorPalette")
library(ggExtra)
library(ColorPalette)
#install.packages("ggpubr")
library(ggpubr)
reef_fish%>%
ggplot(aes(x=Prey,y=Caudal_peduncle_depth,color=Prey))+
geom_boxplot()+
scale_color_brewer(palette = "Dark2")+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1,size = 14),axis.title = element_text(size = 17),plot.title = element_text(size = 20,face = "bold",hjust = .5))+
labs(title = "CPD of Planktivorous and NP Fish",x="Prey Type",y="Caudal Peduncle Depth")+
stat_compare_means(method = "t.test")
reef_fish%>%
ggplot(aes(x=Family,y=Caudal_peduncle_depth,color=Prey))+
geom_boxplot()+
scale_color_brewer(palette = "Dark2")+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1,size = 14),axis.title = element_text(size = 17),plot.title = element_text(size = 20,face = "bold",hjust = .5))+
labs(title = "CPD of Planktivorous and NP Fish by Family",x="Family",y="Caudal Peduncle Depth")
reef_fish%>%
ggplot(aes(x=Prey,y=Fineness_ratio,color=Prey))+
geom_boxplot()+
scale_color_brewer(palette = "Dark2")+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1,size = 14),axis.title = element_text(size = 17),plot.title = element_text(size = 20,face = "bold",hjust = .5))+
labs(title = "FR of Planktivorous and NP Fish",x="Prey Type",y="Fineness Ratio")+stat_compare_means(method = "t.test")
reef_fish%>%
ggplot(aes(x=Family,y=Fineness_ratio,color=Prey))+
geom_boxplot()+
scale_color_brewer(palette = "Dark2")+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1,size = 14),axis.title = element_text(size = 17),plot.title = element_text(size = 20,face = "bold",hjust = .5))+
labs(title = "FR of Planktivorous and NP Fish by Family",x="Family",y="Caudal Peduncle Depth")+
theme(axis.text.x = element_text(angle = 60, hjust=1))
reef_fish%>%
ggplot(aes(x=Prey,y=Body_depth,color=Prey))+
geom_boxplot()+
scale_color_brewer(palette = "Dark2")+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1,size = 14),axis.title = element_text(size = 17),plot.title = element_text(size = 20,face = "bold",hjust = .5))+
labs(title = "BD of Planktivorous and NP Fish",x="Prey Type",y="Body Depth")+stat_compare_means(method = "t.test")
reef_fish%>%
ggplot(aes(x=Family,y=Body_depth,color=Prey))+
geom_boxplot()+
scale_color_brewer(palette = "Dark2")+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1,size = 14),axis.title = element_text(size = 17),plot.title = element_text(size = 20,face = "bold",hjust = .5))+
labs(title = "BD of Planktivorous and NP Fish by Family",x="Family",y="Body Depth")
P<-reef_fish%>%
ggplot(aes(x=Prey,y=Body_length,color=Prey))+
geom_boxplot()+
scale_color_brewer(palette = "Dark2")+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1,size = 14),axis.title = element_text(size = 17),plot.title = element_text(size = 20,face = "bold",hjust = .5))+
labs(title = "BL of Planktivorous and NP Fish",x="Prey Type",y="Body Length")
P+stat_compare_means(method = "t.test")
reef_fish%>%
ggplot(aes(x=Family,y=Body_length,color=Prey))+
geom_boxplot()+
scale_color_brewer(palette = "Dark2")+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1,size = 14),axis.title = element_text(size = 17),plot.title = element_text(size = 20,face = "bold",hjust = .5))+
labs(title = "BL of Planktivorous and NP Fish by Family",x="Family",y="Body Length")
reef_fish%>%
ggplot(aes(x=Caudal_peduncle_depth,y=Fineness_ratio,color=Prey))+
geom_point(size=2.7)+
scale_x_continuous()+
scale_y_continuous()+
geom_smooth(method = lm,se=F)+
stat_regline_equation(label.y=4.9,aes(label = ..eq.label..)) +
stat_regline_equation(label.y=4.5,aes(label = ..rr.label..))+
facet_wrap(~Prey)+
scale_color_brewer(palette = "Dark2")+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1,size = 14),axis.title = element_text(size = 17),plot.title = element_text(size = 20,face = "bold",hjust = .5))+
labs(title = "FR across CPD Values",x="Caudal Peducle Depth",y="Fineness Ratio")
reef_fish%>%
ggplot(aes(x=Body_depth,y=Fineness_ratio,color=Prey))+
geom_point(size=2.7)+
scale_x_continuous()+
scale_y_continuous()+
geom_smooth(method = lm,se=F)+
stat_regline_equation(label.y=1.5,aes(label = ..eq.label..)) +
stat_regline_equation(label.y=1,aes(label = ..rr.label..))+
facet_wrap(~Prey)+
scale_color_brewer(palette = "Dark2")+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1,size = 14),axis.title = element_text(size = 17),plot.title = element_text(size = 20,face = "bold",hjust = .5))+
labs(title = "Contribution of BD to Different FR Values",x="Body Depth",y="Fineness Ratio")
reef_fish%>%
ggplot(aes(x=Body_length,y=Fineness_ratio,color=Prey))+
geom_point(size=2.7)+
scale_x_continuous()+
scale_y_continuous()+
geom_smooth(method = lm,se=F)+
stat_regline_equation(label.y=4.5,aes(label = ..eq.label..)) +
stat_regline_equation(label.y=4,aes(label = ..rr.label..))+
facet_wrap(~Prey)+
scale_color_brewer(palette = "Dark2")+
theme(legend.position = "right",
axis.text.x = element_text(angle = 60, hjust=1,size = 14),axis.title = element_text(size = 17),plot.title = element_text(size = 20,face = "bold",hjust = .5))+
labs(title = "Contribution of BL to Different FR Values",x="Body Length",y="Fineness Ratio")
citation()
t<-reef_fish%>%
group_by(Family,Prey)%>%
summarise(mean_body_length=mean(Body_length),
mean_body_depth=mean(Body_depth),
mean_fineness=mean(Fineness_ratio),
mean_cd_depth=mean(Caudal_peduncle_depth),
mean_jaw_distance=mean(Jaws_to_eye_distance))
t%>%
filter(Prey=benthic)
t<-reef_fish%>%
group_by(Family,Prey)%>%
summarise(mean_body_length=mean(Body_length),
mean_body_depth=mean(Body_depth),
mean_fineness=mean(Fineness_ratio),
mean_cd_depth=mean(Caudal_peduncle_depth),
mean_jaw_distance=mean(Jaws_to_eye_distance))
t%>%
filter(Prey==benthic)
t<-reef_fish%>%
group_by(Family,Prey)%>%
summarise(mean_body_length=mean(Body_length),
mean_body_depth=mean(Body_depth),
mean_fineness=mean(Fineness_ratio),
mean_cd_depth=mean(Caudal_peduncle_depth),
mean_jaw_distance=mean(Jaws_to_eye_distance))
t%>%
filter(Prey=="benthic")
t<-reef_fish%>%
group_by(Family,Prey)%>%
summarise(mean_body_length=mean(Body_length),
mean_body_depth=mean(Body_depth),
mean_fineness=mean(Fineness_ratio),
mean_cd_depth=mean(Caudal_peduncle_depth),
mean_jaw_distance=mean(Jaws_to_eye_distance))
t%>%
filter(Prey=="benthic")
t%>%
filter(Prey=="planktonic")
